{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"E:\\\\breakingbad\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport Layout from \"../components/Layout\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport useSWR from \"swr\";\nimport CardsDisplay from \"../components/CardsDisplay\";\nimport SearchBar from \"../components/SearchBar\";\n\nvar Index = function Index(_ref) {\n  _s();\n\n  var characters = _ref.characters;\n  var searchResults = characters;\n\n  var _useState = useState(\"\"),\n      query = _useState[0],\n      setQuery = _useState[1];\n\n  var _useState2 = useState(false),\n      searched = _useState2[0],\n      setSearched = _useState2[1];\n\n  var _useState3 = useState(false),\n      reveal = _useState3[0],\n      setReveal = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      charName = _useState4[0],\n      setCharName = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      searchValue = _useState5[0],\n      setSearchValue = _useState5[1];\n\n  var fetcher = function fetcher(url) {\n    return axios.get(url).then(function (res) {\n      return res.data;\n    });\n  };\n\n  var _useSWR = useSWR(reveal ? \"https://www.breakingbadapi.com/api/death-count?name=Walter+White\" : null, fetcher),\n      culprit = _useSWR.culprit,\n      error = _useSWR.error;\n\n  console.log(charName);\n  console.log(culprit);\n\n  var _useSWR2 = useSWR(searched ? \"\".concat(process.env.NEXT_PUBLIC_BASE_URL, \"characters?name=\").concat(query) : null, fetcher),\n      data = _useSWR2.data,\n      dataError = _useSWR2.dataError;\n\n  if (data && searched) {\n    searchResults = data;\n  }\n\n  if (dataError) {\n    console.log(\"error\");\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, __jsx(SearchBar, {\n    value: searchValue,\n    onChange: function onChange(e) {\n      return setSearchValue(e.target.value);\n    },\n    onClick: function onClick() {\n      setQuery(searchValue);\n      setSearched(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), __jsx(CardsDisplay, {\n    characters: searchResults,\n    culprit: culprit,\n    onClick: function onClick(e) {\n      setCharName(e.currentTarget.name.split(\" \").join(\"+\"));\n      setReveal(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })));\n};\n\n_s(Index, \"SACcAo7QNL/1aruLK7WR3WF9Tyk=\", false, function () {\n  return [useSWR, useSWR];\n});\n\n_c = Index;\nexport var __N_SSG = true;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["E:/breakingbad/pages/index.js"],"names":["Layout","React","useState","axios","useSWR","CardsDisplay","SearchBar","Index","characters","searchResults","query","setQuery","searched","setSearched","reveal","setReveal","charName","setCharName","searchValue","setSearchValue","fetcher","url","get","then","res","data","culprit","error","console","log","process","env","NEXT_PUBLIC_BASE_URL","dataError","e","target","value","currentTarget","name","split","join"],"mappings":"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","sourcesContent":["import Layout from \"../components/Layout\";\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport useSWR from \"swr\";\r\nimport CardsDisplay from \"../components/CardsDisplay\";\r\nimport SearchBar from \"../components/SearchBar\";\r\n\r\nconst Index = ({ characters }) => {\r\n  let searchResults = characters;\r\n  const [query, setQuery] = useState(\"\");\r\n  const [searched, setSearched] = useState(false);\r\n  const [reveal, setReveal] = useState(false);\r\n  const [charName, setCharName] = useState(\"\");\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const fetcher = (url) => axios.get(url).then((res) => res.data);\r\n  const { culprit, error } = useSWR(\r\n    reveal\r\n      ? `https://www.breakingbadapi.com/api/death-count?name=Walter+White`\r\n      : null,\r\n    fetcher\r\n  );\r\n  console.log(charName);\r\n  console.log(culprit);\r\n  const { data, dataError } = useSWR(\r\n    searched\r\n      ? `${process.env.NEXT_PUBLIC_BASE_URL}characters?name=${query}`\r\n      : null,\r\n    fetcher\r\n  );\r\n  if (data && searched) {\r\n    searchResults = data;\r\n  }\r\n  if (dataError) {\r\n    console.log(\"error\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <SearchBar\r\n          value={searchValue}\r\n          onChange={(e) => setSearchValue(e.target.value)}\r\n          onClick={() => {\r\n            setQuery(searchValue);\r\n            setSearched(true);\r\n          }}\r\n        />\r\n        <CardsDisplay\r\n          characters={searchResults}\r\n          culprit={culprit}\r\n          onClick={(e) => {\r\n            setCharName(e.currentTarget.name.split(\" \").join(\"+\"));\r\n            setReveal(true);\r\n          }}\r\n        />\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n\r\nexport const getStaticProps = async () => {\r\n  const result = await axios.get(\r\n    `${process.env.NEXT_PUBLIC_BASE_URL}characters`\r\n  );\r\n  return {\r\n    props: {\r\n      characters: result.data,\r\n    },\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}