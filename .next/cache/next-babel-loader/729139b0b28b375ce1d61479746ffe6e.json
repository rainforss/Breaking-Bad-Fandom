{"ast":null,"code":"var _jsxFileName = \"E:\\\\breakingbad\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/Layout\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport useSWR from \"swr\";\nimport CardsDisplay from \"../components/CardsDisplay\";\nimport SearchBar from \"../components/SearchBar\";\n\nconst Index = ({\n  characters\n}) => {\n  let searchResults = characters;\n  const {\n    0: query,\n    1: setQuery\n  } = useState(\"\");\n  const {\n    0: searched,\n    1: setSearched\n  } = useState(false);\n  const {\n    0: searchValue,\n    1: setSearchValue\n  } = useState(\"\");\n\n  const fetcher = url => axios.get(url).then(res => res.data);\n\n  const {\n    data,\n    error\n  } = useSWR(`https://www.breakingbadapi.com/api/characters?name=${query}`, fetcher);\n\n  if (data && searched) {\n    searchResults = data;\n  }\n\n  if (error) {\n    console.log(\"error\");\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(SearchBar, {\n    value: searchValue,\n    onChange: e => setSearchValue(e.target.value),\n    onClick: () => {\n      setQuery(searchValue);\n      setSearched(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), __jsx(CardsDisplay, {\n    characters: searchResults,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Index;\nexport const getStaticProps = async () => {\n  const result = await axios.get(`https://www.breakingbadapi.com/api/characters`);\n  return {\n    props: {\n      characters: result.data\n    }\n  };\n};","map":{"version":3,"sources":["E:/breakingbad/pages/index.js"],"names":["Layout","React","useState","axios","useSWR","CardsDisplay","SearchBar","Index","characters","searchResults","query","setQuery","searched","setSearched","searchValue","setSearchValue","fetcher","url","get","then","res","data","error","console","log","e","target","value","getStaticProps","result","props"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAChC,MAAIC,aAAa,GAAGD,UAApB;AACA,QAAM;AAAA,OAACE,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACU,QAAD;AAAA,OAAWC;AAAX,MAA0BX,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM;AAAA,OAACY,WAAD;AAAA,OAAcC;AAAd,MAAgCb,QAAQ,CAAC,EAAD,CAA9C;;AACA,QAAMc,OAAO,GAAIC,GAAD,IAASd,KAAK,CAACe,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAqBC,GAAD,IAASA,GAAG,CAACC,IAAjC,CAAzB;;AACA,QAAM;AAAEA,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBlB,MAAM,CAC3B,sDAAqDM,KAAM,EADhC,EAE5BM,OAF4B,CAA9B;;AAIA,MAAIK,IAAI,IAAIT,QAAZ,EAAsB;AACpBH,IAAAA,aAAa,GAAGY,IAAhB;AACD;;AACD,MAAIC,KAAJ,EAAW;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;;AAED,SACE,4BACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,KAAK,EAAEV,WADT;AAEE,IAAA,QAAQ,EAAGW,CAAD,IAAOV,cAAc,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAFjC;AAGE,IAAA,OAAO,EAAE,MAAM;AACbhB,MAAAA,QAAQ,CAACG,WAAD,CAAR;AACAD,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE,MAAC,YAAD;AAAc,IAAA,UAAU,EAAEJ,aAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF,CADF;AAeD,CAhCD;;AAkCA,eAAeF,KAAf;AAEA,OAAO,MAAMqB,cAAc,GAAG,YAAY;AACxC,QAAMC,MAAM,GAAG,MAAM1B,KAAK,CAACe,GAAN,CAClB,+CADkB,CAArB;AAGA,SAAO;AACLY,IAAAA,KAAK,EAAE;AACLtB,MAAAA,UAAU,EAAEqB,MAAM,CAACR;AADd;AADF,GAAP;AAKD,CATM","sourcesContent":["import Layout from \"../components/Layout\";\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport useSWR from \"swr\";\r\nimport CardsDisplay from \"../components/CardsDisplay\";\r\nimport SearchBar from \"../components/SearchBar\";\r\n\r\nconst Index = ({ characters }) => {\r\n  let searchResults = characters;\r\n  const [query, setQuery] = useState(\"\");\r\n  const [searched, setSearched] = useState(false);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const fetcher = (url) => axios.get(url).then((res) => res.data);\r\n  const { data, error } = useSWR(\r\n    `https://www.breakingbadapi.com/api/characters?name=${query}`,\r\n    fetcher\r\n  );\r\n  if (data && searched) {\r\n    searchResults = data;\r\n  }\r\n  if (error) {\r\n    console.log(\"error\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <SearchBar\r\n          value={searchValue}\r\n          onChange={(e) => setSearchValue(e.target.value)}\r\n          onClick={() => {\r\n            setQuery(searchValue);\r\n            setSearched(true);\r\n          }}\r\n        />\r\n        <CardsDisplay characters={searchResults} />\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n\r\nexport const getStaticProps = async () => {\r\n  const result = await axios.get(\r\n    `https://www.breakingbadapi.com/api/characters`\r\n  );\r\n  return {\r\n    props: {\r\n      characters: result.data,\r\n    },\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}