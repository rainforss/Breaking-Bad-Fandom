{"ast":null,"code":"var _jsxFileName = \"E:\\\\breakingbad\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/Layout\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport useSWR from \"swr\";\nimport CardsDisplay from \"../components/CardsDisplay\";\nimport SearchBar from \"../components/SearchBar\";\n\nconst Index = ({\n  characters\n}) => {\n  const {\n    0: query,\n    1: setQuery\n  } = useState(\"\");\n  const {\n    0: searchValue,\n    1: setSearchValue\n  } = useState(\"\");\n\n  const fetcher = url => axios.get(url).then(res => res.data);\n\n  const {\n    data,\n    error\n  } = useSWR(`${process.env.BASE_URL}characters?name=${query}`, fetcher);\n\n  if (data) {\n    console.log(data);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(SearchBar, {\n    value: searchValue,\n    onChange: setSearchValue,\n    onClick: () => setQuery(searchValue),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), __jsx(CardsDisplay, {\n    characters: characters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Index;\nexport const getStaticProps = async () => {\n  const result = await axios.get(`https://www.breakingbadapi.com/api/characters`);\n  return {\n    props: {\n      characters: result.data\n    }\n  };\n};","map":{"version":3,"sources":["E:/breakingbad/pages/index.js"],"names":["Layout","useState","axios","useSWR","CardsDisplay","SearchBar","Index","characters","query","setQuery","searchValue","setSearchValue","fetcher","url","get","then","res","data","error","process","env","BASE_URL","console","log","getStaticProps","result","props"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAChC,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAA,OAACS,WAAD;AAAA,OAAcC;AAAd,MAAgCV,QAAQ,CAAC,EAAD,CAA9C;;AACA,QAAMW,OAAO,GAAIC,GAAD,IAASX,KAAK,CAACY,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAqBC,GAAD,IAASA,GAAG,CAACC,IAAjC,CAAzB;;AACA,QAAM;AAAEA,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBf,MAAM,CAC3B,GAAEgB,OAAO,CAACC,GAAR,CAAYC,QAAS,mBAAkBb,KAAM,EADpB,EAE5BI,OAF4B,CAA9B;;AAIA,MAAIK,IAAJ,EAAU;AACRK,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACD;;AACD,SACE,4BACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,KAAK,EAAEP,WADT;AAEE,IAAA,QAAQ,EAAEC,cAFZ;AAGE,IAAA,OAAO,EAAE,MAAMF,QAAQ,CAACC,WAAD,CAHzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,MAAC,YAAD;AAAc,IAAA,UAAU,EAAEH,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,CADF;AAYD,CAvBD;;AAyBA,eAAeD,KAAf;AAEA,OAAO,MAAMkB,cAAc,GAAG,YAAY;AACxC,QAAMC,MAAM,GAAG,MAAMvB,KAAK,CAACY,GAAN,CAClB,+CADkB,CAArB;AAGA,SAAO;AACLY,IAAAA,KAAK,EAAE;AACLnB,MAAAA,UAAU,EAAEkB,MAAM,CAACR;AADd;AADF,GAAP;AAKD,CATM","sourcesContent":["import Layout from \"../components/Layout\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport useSWR from \"swr\";\r\nimport CardsDisplay from \"../components/CardsDisplay\";\r\nimport SearchBar from \"../components/SearchBar\";\r\n\r\nconst Index = ({ characters }) => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const fetcher = (url) => axios.get(url).then((res) => res.data);\r\n  const { data, error } = useSWR(\r\n    `${process.env.BASE_URL}characters?name=${query}`,\r\n    fetcher\r\n  );\r\n  if (data) {\r\n    console.log(data);\r\n  }\r\n  return (\r\n    <>\r\n      <Layout>\r\n        <SearchBar\r\n          value={searchValue}\r\n          onChange={setSearchValue}\r\n          onClick={() => setQuery(searchValue)}\r\n        />\r\n        <CardsDisplay characters={characters} />\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n\r\nexport const getStaticProps = async () => {\r\n  const result = await axios.get(\r\n    `https://www.breakingbadapi.com/api/characters`\r\n  );\r\n  return {\r\n    props: {\r\n      characters: result.data,\r\n    },\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}